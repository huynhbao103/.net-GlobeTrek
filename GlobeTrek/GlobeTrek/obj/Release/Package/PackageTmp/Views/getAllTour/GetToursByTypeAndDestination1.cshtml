@model IEnumerable<GlobeTrek.Models.Tour>
@using GlobeTrek.Models

@{
    ViewData["Title"] = "Tour theo chủ đề";

    // Lọc tour theo TourType id = 1, isDisabled = true và isApproved = true
    var filteredTours = Model.Where(t => t.TourType != null &&
                                        t.TourType.id == 2 &&
                                        t.isDisabled == true &&
                                        t.isApproved == true).ToList();

    // Lấy danh sách destination duy nhất từ filteredTours
    var uniqueDestinations = filteredTours.Select(t => t.Destination).Distinct().ToList();
    var selectedDestination = uniqueDestinations.FirstOrDefault() ?? new Destination { name = "" };

    // Lọc ngay các tour của destination đầu tiên để hiển thị mặc định
    var initialTours = filteredTours.Where(t => t.Destination.name == selectedDestination.name).ToList();
}

<!-- Swiper CSS -->
<link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css" />

<!-- Swiper JS -->
<script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>

<style>
    #swiper-theme { /* Đổi class .swiper thành ID #swiper-theme */
        width: 100%;
        padding-bottom: 30px;
    }

    .swiper-slide {
        display: flex;
        justify-content: center;
        align-items: center;
        transition: opacity 0.3s ease-in-out, visibility 0.3s ease-in-out;
        opacity: 1; /* Mặc định hiển thị */
        visibility: visible;
    }

        .swiper-slide.hidden {
            opacity: 0;
            visibility: hidden;
            position: absolute;
        }

    .card {
        width: 300px;
        height: 100%;
    }

    .tour-image {
        width: 100%;
        height: 200px;
        object-fit: cover;
    }

    .btn-outline-success.active {
        background-color: #28a745;
        color: white;
    }
</style>

<div class="container py-4">
    <h1 class="fw-bold">Tour theo chủ đề</h1>
    <p class="text-muted">Khám phá loại tour bạn yêu thích</p>

    @if (filteredTours.Any())
    {
        <!-- Nút chuyển đổi điểm đến -->
        <div class="d-flex overflow-auto gap-2 py-3">
            @foreach (var destination in uniqueDestinations)
            {
                <button class="btn btn-outline-success @(destination == selectedDestination ? "active" : "")"
                        onclick="filterTours1('@destination.name', this)">
                    @destination.name
                </button>
            }
        </div>

        <!-- Swiper Slider với ID riêng -->
        <div id="swiper-theme">
            <div class="swiper-wrapper">
                @foreach (var tour in filteredTours)
                {
                    <div class="swiper-slide @(tour.Destination.name == selectedDestination.name ? "" : "hidden")" data-destination="@tour.Destination.name">
                        <a href="@Url.Action("Details", "getAllTour", new { slug = tour.slug ?? tour.id.ToString() })" style="text-decoration: none; color: inherit;">
                            @if (!string.IsNullOrEmpty(tour.imageUrls))
                            {
                                <img src="@tour.imageUrls" class="tour-image" alt="@tour.title" />
                            }
                            else
                            {
                                <p class="no-image text-center">Chưa có ảnh</p>
                            }
                            <div class="card-body d-flex flex-column justify-content-center align-items-center text-center">
                                <h5 class="card-title mt-xxl-auto">@tour.title</h5>
                                <p class="text-success fw-bold">@tour.price.ToString("N0") VND</p>
                            </div>
                        </a>
                    </div>
                }
            </div>
            <!-- Pagination & Navigation với class riêng -->
            <div class="swiper-pagination swiper-pagination-theme"></div>
            <div class="swiper-button-next swiper-button-next-theme"></div>
            <div class="swiper-button-prev swiper-button-prev-theme"></div>
        </div>
    }
    else
    {
        <p class="text-danger">Không có tour nào phù hợp với điều kiện. Vui lòng kiểm tra dữ liệu hoặc điều kiện lọc.</p>
    }
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Khởi tạo Swiper riêng cho #swiper-theme
        const swiperTheme = new Swiper('#swiper-theme', {
            slidesPerView: 3,
            spaceBetween: 20,
            loop: false,
            autoplay: {
                delay: 3000,
                disableOnInteraction: false,
            },
            pagination: {
                el: '.swiper-pagination-theme', // Class riêng cho pagination
                clickable: true,
            },
            navigation: {
                nextEl: '.swiper-button-next-theme', // Class riêng cho nút next
                prevEl: '.swiper-button-prev-theme', // Class riêng cho nút prev
            },
        });

        // Hàm lọc tour theo điểm đến cho Swiper thứ 2
        window.filterTours1 = function (destination, button) {
            const slides = document.querySelectorAll('#swiper-theme .swiper-slide');
            if (slides.length === 0) {
                console.log('Không có slide nào để lọc trong #swiper-theme.');
                return;
            }

            // Xóa class active khỏi tất cả các nút
            document.querySelectorAll('.btn-outline-success').forEach(btn => {
                btn.classList.remove('active');
            });
            // Thêm class active cho nút được nhấn
            button.classList.add('active');

            // Lọc và chỉ ẩn các slide không thuộc destination được chọn
            slides.forEach(slide => {
                const slideDestination = slide.getAttribute('data-destination');
                if (slideDestination === destination) {
                    slide.classList.remove('hidden');
                } else {
                    slide.classList.add('hidden');
                }
            });

            // Cập nhật Swiper sau khi lọc
            swiperTheme.update();
        };

        // Cập nhật Swiper ngay khi load để hiển thị các tour của destination đầu tiên
        swiperTheme.update();
    });
</script>